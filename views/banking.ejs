  <%- include('./partials/header') %>

  <main>
    <style>
    body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background:#fafafa; color:#333; }
.view-section { max-width:1200px; margin:2rem auto; padding:1rem; }
.view-header { display:flex; justify-content:space-between; align-items:center; flex-wrap:nowrap; gap:0.8rem; }
.view-header h1 { font-size:1.8rem; margin:0; color:#222; width: 100%;}
.view-header .actions {justify-content: flex-end;}
.btn { padding:0.5rem 1rem; border-radius:8px; font-size:0.95rem; cursor:pointer; border:none; transition:background 0.2s, transform 0.1s; }
.btn:hover { transform:translateY(-1px); }
.btn:active { transform:translateY(0); }
.btn-primary { background:#0077ff; color:#fff; }
.btn-primary:hover { background:#005fd1; }
.btn-secondary { background:#f0f0f0; color:#333; }
.btn-secondary:hover { background:#e0e0e0; }
.btn-danger { background:#e74c3c; color:#fff; }
.btn-danger:hover { background:#c0392b; }

.input { width:100%; padding:0.6rem 0.8rem; border-radius:8px; border:1px solid #ddd; font-size:0.95rem; }
.input:focus { outline:none; border-color:#0077ff; box-shadow:0 0 0 2px rgba(0,119,255,0.2); }

.records-table { width:100%; border-collapse:collapse; background:#fff; border-radius:12px; overflow:hidden; box-shadow:0 2px 8px rgba(0,0,0,0.05); }
.records-table th, .records-table td { padding:0.8rem; border-bottom:1px solid #eee; text-align:left; }

.modal { position:fixed; top:0; left:0; width:100%; height:100%; display:flex; align-items:center; justify-content:center;
  background:rgba(0,0,0,0.5); opacity:0; visibility:hidden; transition:opacity 0.25s, visibility 0.25s; z-index:1000; }
.modal[aria-hidden="false"] { opacity:1; visibility:visible; }
.modal-content { position:relative; background:#fff; padding:1.5rem; border-radius:12px; max-width:500px; width:100%;
  box-shadow:0 4px 16px rgba(0,0,0,0.15); transform:translateY(-20px); transition:transform 0.25s; }
.modal[aria-hidden="false"] .modal-content { transform:translateY(0); }
.modal-close { background:none; border:none; font-size:1.5rem; position:absolute; top:1rem; right:1rem; cursor:pointer; }

.view-header .actions { display:flex; align-items:center; gap:0.6rem; width:100%; }
.view-header .actions input[type="search"] { flex-grow:1; min-width:180px; height:42px; }
.view-header .actions button { flex-shrink:0; height:42px; white-space:nowrap; }
  

    </style>
    <section class="view-section">
      <div class="view-header">
        <h1>입출금 관리</h1>
        <div class="actions">
          <button id="open-account-modal-btn" class="btn btn-primary">+ 계좌 추가</button>
          <button id="open-transaction-modal-btn" class="btn btn-secondary">+ 거래 추가</button>
          <button id="open-transfer-modal-btn" class="btn btn-secondary">+ 이체</button>
        </div>
      </div>
      <hr>
      <!-- Accounts Table -->
      <div class="table-wrap">
        <h2>계좌 목록</h2>
        <table class="records-table" aria-label="계좌 목록">
          <thead>
            <tr>
              <th scope="col">ID</th>
              <th scope="col">이름</th>
              <th scope="col">유형</th>
              <th scope="col">잔액</th>
              <th scope="col">생성일</th>
              <th scope="col">작업</th>
            </tr>
          </thead>
          <tbody id="account-body">
            <% if (accounts && accounts.length > 0) { %>
              <% accounts.forEach(acc => { %>
                <tr data-id="<%= acc.id %>">
                  <td><%= acc.id %></td>
                  <td><%= acc.name %></td>
                  <td><%= acc.type %></td>
                  <td><%= acc.balance.toLocaleString() %> 원</td>
                  <td><%= acc.created_at.toISOString().slice(0,10) %></td>
                  <td>
                    <button class="delete-account-btn btn btn-danger">삭제</button>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr class="empty-row">
                <td colspan="6" style="text-align:center;">No accounts</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>

      <!-- Transactions Table -->
      <div class="table-wrap">
        <h2>최근 거래 내역</h2>
        <table class="records-table" aria-label="거래 내역">
          <thead>
            <tr>
              <th>ID</th>
              <th>계좌</th>
              <th>상대 계좌</th>
              <th>유형</th>
              <th>금액</th>
              <th>설명</th>
              <th>날짜</th>
              <th>작업</th>
            </tr>
          </thead>
          <tbody id="transaction-body">
            <% if (transactions && transactions.length > 0) { %>
              <% transactions.forEach(tx => { %>
                <tr data-id="<%= tx.id %>">
                  <td><%= tx.id %></td>
                  <td><%= tx.account_id %></td>
                  <td><%= tx.related_account_id || '-' %></td>
                  <td><%= tx.type %></td>
                  <td><%= tx.amount.toLocaleString() %> 원</td>
                  <td><%= tx.description || '-' %></td>
                  <td><%= tx.created_at.toISOString().slice(0,10) %></td>
                  <td>
                    <button class="delete-transaction-btn btn btn-danger">삭제</button>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr class="empty-row">
                <td colspan="8" style="text-align:center;">No transactions</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </section>
  </main>

  <%- include('./partials/footer') %>

  <!-- Account Modal -->
  <div id="account-modal" class="modal" aria-hidden="true">
    <div class="modal-content">
      <button class="modal-close close-account-btn">&times;</button>
      <h2>계좌 추가</h2>
      <input type="text" id="account-name" class="input" placeholder="계좌 이름" />
      <select id="account-type" class="input" style="margin-bottom:1rem;">
        <option value="Checking">입출금</option>
        <option value="Savings">저축</option>
        <option value="Credit">신용카드</option>
        <option value="Cash">현금</option>
        <option value="Other">기타</option>
      </select>
      <div class="modal-actions">
        <button id="save-account-btn" class="btn btn-primary">저장</button>
        <button class="btn btn-secondary modal-cancel" data-target="account-modal">취소</button>
      </div>
    </div>
  </div>

  <!-- Transaction Modal -->
  <div id="transaction-modal" class="modal" aria-hidden="true">
    <div class="modal-content">
      <button class="modal-close close-transaction-btn">&times;</button>
      <h2>거래 추가</h2>
      <select id="transaction-account" class="input" style="margin-bottom:1rem;">
        <% accounts.forEach(acc => { %>
          <option value="<%= acc.id %>"><%= acc.name %> (잔액: <%= acc.balance.toLocaleString() %> 원)</option>
        <% }) %>
      </select>
      <select id="transaction-type" class="input" style="margin-bottom:1rem;">
        <option value="Deposit">입금</option>
        <option value="Withdrawal">출금</option>
        <option value="Payment">지불</option>
      </select>
      <input type="number" id="transaction-amount" class="input" placeholder="금액" />
      <textarea id="transaction-description" class="input" placeholder="설명"></textarea>
      <div class="modal-actions">
        <button id="save-transaction-btn" class="btn btn-primary">저장</button>
        <button class="btn btn-secondary modal-cancel" data-target="transaction-modal">취소</button>
      </div>
    </div>
  </div>

  <!-- Transfer Modal -->
  <div id="transfer-modal" class="modal" aria-hidden="true">
    <div class="modal-content">
      <button class="modal-close close-transfer-btn">&times;</button>
      <h2>계좌 이체</h2>
      <select id="from-account" class="input" style="margin-bottom:1rem;">
        <% accounts.forEach(acc => { %>
          <option value="<%= acc.id %>"><%= acc.name %> (잔액: <%= acc.balance.toLocaleString() %> 원)</option>
        <% }) %>
      </select>
      <select id="to-account" class="input" style="margin-bottom:1rem;">
        <% accounts.forEach(acc => { %>
          <option value="<%= acc.id %>"><%= acc.name %> (잔액: <%= acc.balance.toLocaleString() %> 원)</option>
        <% }) %>
      </select>
      <input type="number" id="transfer-amount" class="input" placeholder="금액" />
      <textarea id="transfer-description" class="input" placeholder="설명"></textarea>
      <div class="modal-actions">
        <button id="save-transfer-btn" class="btn btn-primary">저장</button>
        <button class="btn btn-secondary modal-cancel" data-target="transfer-modal">취소</button>
      </div>
    </div>
  </div>

  <!-- Delete Modal -->
  <div id="delete-modal" class="modal" aria-hidden="true">
    <div class="modal-content">
      <button class="modal-close close-delete-btn">&times;</button>
      <h2>삭제 확인</h2>
      <p>정말 삭제하시겠습니까?</p>
      <div class="modal-actions">
        <button id="confirm-delete-btn" class="btn btn-danger">삭제</button>
        <button id="cancel-delete-btn" class="btn btn-secondary">취소</button>
      </div>
    </div>
  </div>

  <script>
  (function(){
    function showModal(m){ m.setAttribute('aria-hidden','false'); document.body.style.overflow='hidden'; }
    function hideModal(m){ m.setAttribute('aria-hidden','true'); document.body.style.overflow=''; }

    const accountModal = document.getElementById('account-modal');
    const transactionModal = document.getElementById('transaction-modal');
    const transferModal = document.getElementById('transfer-modal');
    const deleteModal = document.getElementById('delete-modal');

    let deleteTarget = null, deleteType = null;

    // Open modals
    document.getElementById('open-account-modal-btn').onclick = () => showModal(accountModal);
    document.getElementById('open-transaction-modal-btn').onclick = () => showModal(transactionModal);
    document.getElementById('open-transfer-modal-btn').onclick = () => showModal(transferModal);

    // Close modals
    document.querySelectorAll('.modal-close,.modal-cancel').forEach(btn=>{
      btn.addEventListener('click',()=>hideModal(btn.closest('.modal')));
    });

    // Save Account
    document.getElementById('save-account-btn').onclick = async ()=>{
      const name = document.getElementById('account-name').value.trim();
      const type = document.getElementById('account-type').value;
      if(!name) return alert('계좌 이름 필요');
      const res = await fetch('/banking/account/add',{method:'POST',body:new URLSearchParams({name,type})});
      const data = await res.json();
      if(data.valid) location.reload(); else alert(data.error||'실패');
    };

    // Save Transaction
    document.getElementById('save-transaction-btn').onclick = async ()=>{
      const payload = {
        account_id: document.getElementById('transaction-account').value,
        type: document.getElementById('transaction-type').value,
        amount: document.getElementById('transaction-amount').value,
        description: document.getElementById('transaction-description').value
      };
      const res = await fetch('/banking/transaction/add',{method:'POST',body:new URLSearchParams(payload)});
      const data = await res.json();
      if(data.valid) location.reload(); else alert(data.error||'실패');
    };

    // Save Transfer
    document.getElementById('save-transfer-btn').onclick = async ()=>{
      const payload = {
        from_account: document.getElementById('from-account').value,
        to_account: document.getElementById('to-account').value,
        amount: document.getElementById('transfer-amount').value,
        description: document.getElementById('transfer-description').value
      };
      const res = await fetch('/banking/transfer',{method:'POST',body:new URLSearchParams(payload)});
      const data = await res.json();
      if(data.valid) location.reload(); else alert(data.error||'실패');
    };

    // Delete buttons
    document.querySelectorAll('.delete-account-btn').forEach(btn=>{
      btn.onclick = ()=>{ deleteTarget=btn.closest('tr').dataset.id; deleteType='account'; showModal(deleteModal); };
    });
    document.querySelectorAll('.delete-transaction-btn').forEach(btn=>{
      btn.onclick = ()=>{ deleteTarget=btn.closest('tr').dataset.id; deleteType='transaction'; showModal(deleteModal); };
    });

    document.getElementById('confirm-delete-btn').onclick = async ()=>{
      if(!deleteTarget) return;
      const url = deleteType==='account'?'/banking/account/delete':'/banking/transaction/delete';
      const res = await fetch(url,{method:'POST',body:new URLSearchParams({id:deleteTarget})});
      const data = await res.json();
      if(data.valid) location.reload(); else alert('삭제 실패');
    };
    document.getElementById('cancel-delete-btn').onclick = ()=>hideModal(deleteModal);
  })();


  </script> 
  </body>